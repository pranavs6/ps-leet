Link : https://leetcode.com/problems/maximum-subarray/description/

My approach in Python:

class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        ms=nums[0] #Final maximum sum
        cs=0 #The processing value, current sum of the system

        for i in nums:
            if cs<0:
                cs=0
            cs+=i
            ms=max(ms,cs)

        return ms
        
#This is the sliding window approach

My appraoch in Java:

class Solution {
    public int maxSubArray(int[] nums) {
        int ms=nums[0];
        int cs=0;
        for(int i=0;i<nums.length;i++){
            if(cs<0)
                cs=0;
            cs+=nums[i];
            if(cs>ms)
                ms=cs;
        }
        return(ms);
    }
}
