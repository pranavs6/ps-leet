Link : https://leetcode.com/problems/rotate-list/description

My approach in python : 
    # Definition for singly-linked list.
  # class ListNode:
  #     def __init__(self, val=0, next=None):
  #         self.val = val
  #         self.next = next
  class Solution:
      def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
          if not head:
              return None
          
          last=head
          l=1
          while(last.next):
              last=last.next
              l+=1
          
          k=k%l
  
          last.next=head
  
          temp = head
          for i in range(l-k-1):
              temp=temp.next
  
          res=temp.next
          temp.next=None
  
          return(res)
